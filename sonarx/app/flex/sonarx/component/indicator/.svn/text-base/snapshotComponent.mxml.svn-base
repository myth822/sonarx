<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="520" height="138"
				   cornerRadius="2" borderWeight="1" 
				   dropShadowVisible="true">
	<fx:Script>
		<![CDATA[
			public var ac:ArrayCollection = new ArrayCollection(
					[ {label:"All", data:1}, 
					{label:"Last Ten", data:2}]);
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:XMLList id="ssd">
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
			<snapshot>
				<date>2010-07-11</date>
				<pname>sonarx</pname>
				<indicator>alert</indicator>
				<user>myth</user>
			</snapshot>
		</fx:XMLList>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			public function generateDataProvider():ArrayCollection {
				var ac:ArrayCollection = new ArrayCollection();
				
				// create a collection of random flights
				for each(var p:XML in ssd) {
					var temp:Object = new Object();
					temp.start = String(p.date[0]);
					temp.end = String(p.indicator[0]);
					temp.details = "project : " + String(p.pname[0]) + ', builder : ' + String(p.user[0]);
					ac.addItem(temp);
				}
				
				return ac;
				
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout horizontalAlign="left" 
							paddingLeft="10" paddingRight="10" 
							paddingTop="10" paddingBottom="10"/>
	</s:layout>
	
	<s:HGroup width="100%" height="100%">
		<s:VGroup>
			<s:ComboBox dataProvider="{ac}" width="150" color="0x000000" selectedIndex="0"/>
			<s:Scroller horizontalCenter="0" top="10">
				<s:DataGroup width="460" height="80" clipAndEnableScrolling="true" dataProvider="{generateDataProvider()}">
					<s:layout>
						<s:VerticalLayout gap="1" useVirtualLayout="true" />
					</s:layout>
					<s:itemRenderer>
						<fx:Component>
							<s:ItemRenderer width="460" height="20">
								<s:states>
									<s:State name="normal" />
									<s:State name="hovered" />
									<s:State name="selected" />
								</s:states>
								
								<fx:Script>
									<![CDATA[
										override public function set data(value:Object):void {
											super.data = value;
											
											if (data == null) // a renderer's data is set to null when it goes out of view
												return;
											
											txtStart.text = data.start;
											txtEnd.text = data.end;
											txtDetails.text = data.details;
										}
									]]>
								</fx:Script>
								
								<s:transitions>
									<mx:Transition fromState="normal" toState="hovered">
										<s:Animate target="{flightPlan}" duration="150">
											<s:SimpleMotionPath property="width" />
										</s:Animate>
									</mx:Transition>
									<mx:Transition fromState="hovered" toState="normal">
										<s:Animate target="{flightPlan}" duration="150" >
											<s:SimpleMotionPath property="width" />
										</s:Animate>
									</mx:Transition>
								</s:transitions>
								
								<s:Rect left="0" right="0" top="0" bottom="0" radiusX="5" radiusY="5">
									<s:fill>
										<s:SolidColor color="#E1ECF4" />
									</s:fill>
								</s:Rect>
								
								<s:HGroup verticalAlign="middle">
									<s:Group id="flightPlan" height="20" width="180" width.hovered="220">
										<s:Rect left="0" right="0" top="0" bottom="0" radiusX="5" radiusY="5">
											<s:fill>
												<s:SolidColor color="#65A3CE" color.hovered="#65A3FF" />
											</s:fill>
										</s:Rect>
										<s:Label id="txtStart" color="#FFFFFF" fontWeight="bold" left="20" verticalCenter="2" />
										<s:Label id="txtEnd" color="#FFFFFF" fontWeight="bold" right="20" verticalCenter="2" textAlign="right" />
									</s:Group>
									<s:Label id="txtDetails" color="#32353f" fontSize="11" />
								</s:HGroup>
							</s:ItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:DataGroup>
			</s:Scroller>
		</s:VGroup>
	</s:HGroup>
</s:BorderContainer>
